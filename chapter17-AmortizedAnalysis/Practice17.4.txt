17.4-1 假定我们希望实现一个动态的开地址散列表。为什么我们需要在装载因子达到一个严格小于1的值α时就认为表满？简要描述如何为动态开地址散列表设计一个插入算法，使得每个插入操作的摊还代价的期望值为O（1）.为什么每个插入操作的实际代价的期望值不必对所有插入操作都是O（1）。
对于均匀开地址散列表，插入一个元素最多需要做1/(1-α）次探查，如果装载因子不断增加，无限接近于1时，后续插入元素的代价会快速增加。因此必须设定一个严格小于1的值α时就要认为表满。
插入算法的操作过程为：每次当装载因子达到1/2时，复制所有元素，扩充容量至两倍。
因此一次插入操作的期望运行时间最多为2次，剩余过程与表扩张过程相同，因此每个插入操作的摊还代价为O（1）。

17.4-2 证明：如果动态表αi-1>=1/2且第i个操作是TABLE-DELETE，那么用势函数公式17.6定义的操作的摊还代价的上界是一个常数。
如果动态表αi-1>=1/2且第i个操作是TABLE-DELETE，那么本操作并不会引起表收缩。
ci' = 1 + 2*T.num - T.size - [2*(T.num-1)- T.size)
    = 1 - 2 = -1
摊还代价为3。

17.4-3 假定我们改变表收缩的方式，不是当装载因子小于1/4时将表的规模减半，而是当装载因子小于1/3时将表规模变成原来的2/3,使用势函数Φ（T）=|2*T.num-T.size| 证明：使用此策略，TABLE-DELETE操作的摊还代价的上界是一个常数。
若αi-1>=1/2,那么第i个操作TABLE-DELETE不会引起表收缩。
此时ci' =  1 + 2*(T.num-1) - T.size - [2*T.num- T.size)
       = 1 - 2 = -1

若αi-1<1/2且αi-1>=1/3时，第i个操作TABLE-DELETE不会引起表收缩。
此时ci' =  1 + T.size-2*T.num - [2*(T.num-1)- T.size)
       = 1 + 2 = 3

如果αi-1<1/3，第i个操作TABLE-DELETE会引起表收缩,T.size = 3(T.num+1)
此时 ci' = T.num + 1 + 2/3 T.size -2*T.num - [T.size - 2*(T.num+1)]
	 = T.num +1 + 2(T.num+1) -2*T.num-3*(T.num+1)+2*T.num +2
	 = 2 
因此，综合上述，TABLE-DELETE操作的摊还代价的上界是一个常数。