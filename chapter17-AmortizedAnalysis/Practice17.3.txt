17.3-1 假定有势函数Φ，对所有的i满足Φ（Di）>=Φ(D0)，但Φ(D0)≠0。证明：存在势函数Φ'，使得Φ'（D0）= 0 ，对于所有i>=1，满足Φ'（Di）>=0，且使用Φ'的摊还代价与使用Φ的摊还代价相同。
依题意可设 Φ'（x）=Φ（x）-Φ（D0）
则Φ'（D0）= 0 ，且对于所有i>=1，满足Φ'（Di）>=0，
摊还代价ci' = ci +Φ'（Di）-Φ'（Di-1）=  ci +Φ（Di-Φ(D0) -[Φ'（Di-1）-Φ(D0)] =ci +Φ（Di）-Φ'Di-1）
因此，使用Φ'的摊还代价与使用Φ的摊还代价相同。

17.3-2 使用势能法重做练习17.1-3
略

17.3-3 考虑一个包含n个元素的普通二叉最小堆数据结构，它支持INSERT和EXTRACT-MIN操作，最坏情况时间均为O（lgn）。给出一个势函数Φ，使得INSERT操作的摊还代价为O（lgn）,而EXTRACT-MIN的操作代价为O（1），证明它是对的。
在最小堆中，INSERT操作为O（lgn）,EXTRACT-MIN操作为O（lgn）,考虑到摊还分析中可以使其中一个操作代价为2*O(lgn)，以补偿另一个操作的代价，因此，肯定成立。

17.3-4 执行n个PUSH,POP,MULTIPOP栈操作的总代价是多少？假定初始时栈中包含S0个对象，结束后包含Sn个对象。
∑ci = ∑ci' - Φ（n）+Φ(0)
     <= 2n - Sn +S0
|Sn-S0|<=n
因此∑ci = O(n)

17.3-5 假定计数器的初始值不是0，而是包含b个1的二进制数。证明：若n = Ω（b）,则执行n个INCREMENT操作的代价为O（n）。
 ∑ci <= ∑ci' - Φ（n）+Φ(0)
       = 2n - bn +b0
       = 2n - bn + O(n) = O(n)

17.3-6 证明：如何利用两个普通的栈实现一个队列，使得每个ENQUEUE和DEQUEUE操作的摊还代价为O（1）。
队列的压人操作与栈的压人操作相同，可用一个栈来进行压入操作，同时，可用一个方向完全相反的栈来完成队列的弹出操作。

17.3-7 为动态整数多重集S设计一种数据结构，支持如下两个操作：
INSERT（S，x）将x插入S中。
DELETE-LARGER-HALF(S)将最大的sup[|S|/2]个元素从S中删除。
解释如何实现这种数据结构，使得任意m个INSERT和DELETE-LARGER-HALF操作的能在O（m）时间内完成。还要实现一个能在O（|S|）时间内输出所有元素的操作。
给定一个空数组A，A.length >= |S|，一个指针p指向尾元素。
INSERT操作：依据p获得尾元素
。。。不会做