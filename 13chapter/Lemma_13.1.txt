//这个月都在忙着学R进行芯片数据处理，一个月都没看算法导论，先来个小证明整理下思路，活动活动脑子
证明：一颗有n个内部结点的红黑树高度至多为2lg(n+1)，即证 h<=2lg(n+1)
本证明涉及到红黑树关键性质：
1.结点为红色，其必有两个子结点，且均为黑色
2.每个结点到其叶结点的简单路径上，其黑结点数目相同
h<=2lg(n+1) 
=> n>=2^h/2 - 1
由红黑树性质得知: bh(x)>h/2
=> n>= 2^bh(x) - 1
下面用归纳法证明：
x = T.nil 时，bh（x）=0 
等式左边=0，右边=2^0 -1=0，得证；
x!= T.nil时，考虑x为一个内部节点，设x1，x2为其子结点
依据性质1，当x为红色，则bh（x）=bh(x1)+1=bh(x2)+1;
当x为黑色，依据x1，x2颜色，bh(x)=bh(x1)+1||bh=bh(x);
则bh(x)<=bh(x子)+1,带入不等式中:
n = n(子)+1 >= [2^bh(x子)-1] +[2^bh(x子)-1]+1 
>= [2^(bh(x)-1)-1]*2+1=2^bh(x)-1
即n>=2^bh(x)-1 => h<=2lg(n+1)得证