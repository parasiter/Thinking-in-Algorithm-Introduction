13.3-1 为什么不将新插入的结点着为黑色
着为黑色会导致该部分子树的黑高增大，与其他子树黑高不同，性质5被破坏

13.3-2 将关键字41,38,31,12,19,8连续插入一颗初始为空的红黑树，画出该结果树
略

13.3-3 给每张图中每个结点标上黑高，验证图中所示的转换能保持性质5。
略

13.3-4 证明RB-INSERT-FIXUP不可能将T.nil.color设置成红色，这样会导致无限循环
如果T.root = T.nil 则直接跳过循环。
如果T.root != T.nil,进入循环条件为：z.p.color == red，依据红黑树性质，z.p.p.color == black，存在且为黑色！而在循环内部，只对z.p.p.color或者z.p.color进行设置，因此不可能设置到比z.p.p更高结点的颜色。

13.3-5 考虑一棵用RB-INSERT插入n个结点而成的红黑树，证明：如果n>1，则该树至少有一个红色结点。
依据RB-INSERT证明过程中的循环不变式，新插入的点z始终会保持红色，因此，该树至少有一个红色结点。得证

13.3-6 说明如果红黑树的表示中不提供父指针，应当如何有效的实现RB-INSERT
所有与插入元素z比较过的结点，及这些结点的子结点全部按顺序保存在数组中，因为在进行红黑树性质维护时，有用的只有z.p，z.p.p，z.p.p.right/left。
详细讨论见Thoughts。
 