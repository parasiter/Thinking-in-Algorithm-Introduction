13-1（持久动态集合）
a.对于一棵一般的持久二叉树，为插入一个关键字k或删除一个结点y，需要改变哪些结点。
首先，每个结点的属性只有key,right,left，没有parent。当结点发生变化时，只会对该结点到根结点的简单路径上所有结点造成影响。
对于插入一个关键字k，会影响k到根节点简单路径中的所有结点。
删除一个结点y时，依据TREE-DELTE（T,y）,只要该过程使哪些结点发生变化，会影响该节点到根节点简单路径中的所有结点。

b.请写出一个过程PERSISTENT-TREE-INSERT,使得给定一棵持久树T和一个要插入的关键字k时，它返回将k插入T后得到的新的持久树T’。

PERSISTENT-TREE-INSERT(T,k)
{
	Array temp; //定义一个数组，大小足够大
	i = 0;
	x = T.root;
	temp[i] =x;
	while(x!=T.nil)
	{	
		++i;	
		if(x<=k)
		{	
			x = x.right;
			temp[i] = x.right;
		}
		x = x.left;
		temp[i] = x.left;
		
	}
	temp[i] = k;
        //构建持久树T’
	T'.root = temp[0];
	j = 1;
 	while(j<=i)
	{
		if(temp[j-1]<=temp[j])
			tem[j-1].right = temp[j];
		temp[j-1].left = temp[j];
		++j;
	}
	return T';
}

c. 如果持久二叉树T的高度为h，实现PERSISTENT-TREE-INSERT过程的时间和空间需求分别是多少。
插入操作的期望运行时间为O（h）,其空间需求与运行时间完全相同，为O(h).

d. 假设在每个结点中增加一个父节点属性。这种情况下PERSISTENT-TREE-INSERT需要做一些额外的复制工作，证明：PERSISTENT-TREE-INSERT的时间需求和空间需求为Ω（n），其中n为树中的结点个数。
在没有父节点时，插入操作导致的复制结点为：该插入结点到根节点的简单路径中所有结点
在此基础上，增加父节点后，所有受影响结点其子结点的父节点也要进行修正，而除了根节点外的所有结点都是根结点的子结点，全都受影响，因此，所有结点全部被复制。其时间需求和空间需求均为Ω（n）。

e.说明如何利用红黑树来保证每次插入或删除最坏情况的运行时间和空间为O(lgn)。
如果利用红黑树来维持持久树的插入和删除操作。则所有叶结点的高度范围为[bh(T),2bh(T)+1]
则T（n）=O(2bh(T)+1) = O(bh(T))
由13.1证得 bh(T)<=lg(n+1)
因此T（n） = O(lgn)，而空间需求相同，为O（lgn）

	
